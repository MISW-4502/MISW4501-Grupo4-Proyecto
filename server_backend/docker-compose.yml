version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - backend_net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend_net

  auth-service:
    build: ./auth
    container_name: auth-service
    ports:
      - "3200:3200"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: supersecreta123
      JWT_EXPIRATION_HOURS: 1
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_duck
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  truck-service:
    build: ./truck
    container_name: truck-service
    ports:
      - "3300:3300"
    environment:
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_duck
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  inventary-service:
    build: ./inventary
    container_name: inventary-service
    ports:
      - "3400:3400"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
      QUEUE_NAME: product_queue
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_duck
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  product-worker:
    build: ./product-worker
    container_name: product-worker
    ports:
      - "3401:3401"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
      QUEUE_NAME: product_queue
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_duck
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  sales-service:
    build: ./sales
    container_name: sales-service
    ports:
      - "3500:3500"
    environment:
      INVENTARY_SERVICE_URL: http://inventary-service:3400
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
      QUEUE_NAME: order_queue
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_duck
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  order-worker:
    build: ./order-worker
    container_name: order-worker
    ports:
      - "3501:3501"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
      QUEUE_NAME: order_queue
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_duck
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  manufacturer-service:
    build: ./manufacturer
    container_name: manufacturer-service
    ports:
      - "3404:3404"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: admin
      QUEUE_NAME: manufacturer_queue
      DB_HOST: 34.10.119.155
      DB_PORT: 5432
      DB_NAME: db_ducks
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - sales-service
      - truck-service
      - product-worker
      - order-worker
      - manufacturer-service
      - inventary-service
    env_file:
      - ./api-gateway/.env
    networks:
      - backend_net

networks:
  backend_net:
    driver: bridge
