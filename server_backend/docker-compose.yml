version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.rabbitmq.rule=PathPrefix(`/rabbitmq`)"
    - "traefik.http.routers.rabbitmq.middlewares=rabbitmq-stripprefix"
    - "traefik.http.middlewares.rabbitmq-stripprefix.stripPrefix.prefixes=/rabbitmq"
    - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"

    networks:
      - backend_net
  
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend_net


  auth-service:
    build: ./auth
    container_name: auth-service
    ports:
      - "3200:3200"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: supersecreta123
      JWT_EXPIRATION_HOURS: 1
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
      DB_HOST: 34.135.147.249     
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=PathPrefix(`/auth`)"
      - "traefik.http.services.auth-service.loadbalancer.server.port=3200"



  truck-service:
      build: ./truck
      container_name: truck-service
      ports:
        - "3300:3300"
      environment:
        DB_HOST: 34.135.147.249     
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres123
      depends_on:
        - rabbitmq
      networks:
        - backend_net
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.truck-service.rule=PathPrefix(`/truck`)"
        - "traefik.http.services.truck-service.loadbalancer.server.port=3300"

  inventary-service:
      build: ./inventary
      container_name: inventary-service
      ports:
        - "3400:3400"
      environment:
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: admin
        RABBITMQ_PASS: admin
        QUEUE_NAME: product_queue
        DB_HOST: 34.135.147.249     
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres123
      depends_on:
        - rabbitmq
      networks:
        - backend_net
      
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventary.rule=PathPrefix(`/inventary`)"
      - "traefik.http.services.inventary.loadbalancer.server.port=3400"
      

  product-worker:
      build: ./product-worker
      container_name: product-worker
      ports:
        - "3401:3401"
      environment:
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: admin
        RABBITMQ_PASS: admin
        QUEUE_NAME: product_queue
        DB_HOST: 34.135.147.249     
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres123
      depends_on:
        - rabbitmq
       
      networks:
        - backend_net

  sales-service:
      build: ./sales
      container_name: sales-service
      ports:
        - "3500:3500"
      environment:
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: admin
        RABBITMQ_PASS: admin
        QUEUE_NAME: order_queue
        DB_HOST: 34.135.147.249     
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres123
      depends_on:
        - rabbitmq
      networks:
        - backend_net
      
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sales.rule=PathPrefix(`/sales`)"
      - "traefik.http.services.sales.loadbalancer.server.port=3500"


  order-worker:
      build: ./order-worker
      container_name: order-worker
      ports:
        - "3501:3501"
      environment:
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: admin
        RABBITMQ_PASS: admin
        QUEUE_NAME: order_queue
        DB_HOST: 34.135.147.249     
        DB_PORT: 5432
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: postgres123
      depends_on:
        - rabbitmq
      networks:
        - backend_net

  manufacturer-service:
    build: ./manufacturer
    container_name: manufacturer-service
    ports:
      - "3404:3404"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASSWORD: admin
      QUEUE_NAME: manufacturer_queue
      DB_HOST: 34.135.147.249     
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      - rabbitmq
    networks:
      - backend_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.manufacturer-service.rule=PathPrefix(`/manufacturer`)"
      - "traefik.http.services.manufacturer-service.loadbalancer.server.port=3404"


  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"           # Entrada principal
      - "8080:8080"       # Dashboard Traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - backend_net



volumes:
  pgdata_auth:

networks:
  backend_net:
    driver: bridge

