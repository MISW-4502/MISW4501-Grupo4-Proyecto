name: CI/CD Server Backend

on:
  push:
    branches:
      - test_branch 
jobs:
  test-all:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [auth, truck, manufacturer, inventary, sales]

    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v3

    - name: 🐍 Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Instalar dependencias
      run: |
        cd server_backend/${{matrix.service}}
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: 🧪 Ejecutar tests con coverage
      run: |
        cd server_backend/${{ matrix.service }}
        export PYTHONPATH=src
        pytest --cov=src --cov-report=term

    - name: 📤 Subir reportes como artefactos (opcional)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.service }}
        path: ${{ matrix.service }}/.coverage*

  deploy:
    needs: test-all
    runs-on: ubuntu-latest
    if: success()

    steps:
    - name: 🔐 Configurar clave SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: 🚀 Desplegar en el servidor Ubuntu (GCP)
      run: |
        ssh -i ~/.ssh/id_ed25519 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ~/MISW4501-Grupo4-Proyecto/server_backend/
          git pull
          docker-compose down
        EOF